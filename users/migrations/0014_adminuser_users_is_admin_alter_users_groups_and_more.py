# Generated by Django 5.1.4 on 2025-09-19 13:42

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("users", "0013_specialty_alter_doctors_specialty"),
    ]

    operations = [
        migrations.CreateModel(
            name="AdminUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("hospital_name", models.CharField(max_length=100)),
                ("employee_id", models.CharField(max_length=20, unique=True)),
                (
                    "department",
                    models.CharField(
                        choices=[
                            ("IT", "Information Technology"),
                            ("HR", "Human Resources"),
                            ("Finance", "Finance"),
                            ("Operations", "Operations"),
                            ("Management", "Management"),
                            ("Medical", "Medical Administration"),
                        ],
                        max_length=50,
                    ),
                ),
                ("hire_date", models.DateField()),
                ("phone", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "profile_avatar",
                    models.ImageField(
                        blank=True,
                        default="admin/profiles/default.png",
                        null=True,
                        upload_to="admin/profiles",
                    ),
                ),
                ("is_active_admin", models.BooleanField(default=True)),
                (
                    "address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="admin_users",
                        to="users.address",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="admin_users",
                        related_query_name="admin_user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="admin_users",
                        related_query_name="admin_user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "AdminUser",
                "verbose_name_plural": "AdminUsers",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name="users",
            name="is_admin",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="users",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to.",
                related_name="regular_users",
                related_query_name="regular_user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AlterField(
            model_name="users",
            name="id_address",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="regular_users",
                to="users.address",
            ),
        ),
        migrations.AlterField(
            model_name="users",
            name="last_name",
            field=models.CharField(
                blank=True, default="Hospital", max_length=50, null=True
            ),
        ),
        migrations.AlterField(
            model_name="users",
            name="profile_avatar",
            field=models.ImageField(
                blank=True,
                default="doctor/profiles/download.png",
                null=True,
                upload_to="users/profiles",
            ),
        ),
        migrations.AlterField(
            model_name="users",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="regular_users",
                related_query_name="regular_user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.CreateModel(
            name="Admins",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="users.adminuser",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("super_admin", "Super Administrator"),
                            ("system_admin", "System Administrator"),
                            ("hospital_admin", "Hospital Administrator"),
                            ("department_admin", "Department Administrator"),
                            ("staff_admin", "Staff Administrator"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "access_level",
                    models.CharField(
                        choices=[
                            ("read", "Read Only"),
                            ("write", "Read & Write"),
                            ("admin", "Full Admin"),
                            ("super", "Super Admin"),
                        ],
                        default="read",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Administrative notes about this admin user",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_admins",
                        to="users.adminuser",
                    ),
                ),
                (
                    "permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="admin_permissions",
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "Admin",
                "verbose_name_plural": "Admins",
            },
        ),
    ]
